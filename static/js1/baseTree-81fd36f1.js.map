{"version":3,"file":"baseTree-81fd36f1.js","sources":["../../../src/api/tree.ts","../../../src/views/tree/components/addTreeNode.vue","../../../src/views/tree/baseTree.vue"],"sourcesContent":["import request from '@/utils/request';\r\n\r\nexport const getTreeData = (data:Record<string, string>) => {\r\n    return request({\r\n        url: '/vue3-element-admin/mock/tree.json',\r\n        method: 'get',\r\n        data\r\n    });\r\n};\r\n","<template>\r\n  <el-dialog\r\n    v-model=\"dialogVisible\"\r\n    title=\"添加组织\"\r\n    width=\"30%\"\r\n    :before-close=\"doClose\"\r\n  >\r\n    <el-form\r\n      ref=\"formRef\"\r\n      label-width=\"100px\"\r\n      :model=\"nodeForm\"\r\n      :rules=\"rules\"\r\n    >\r\n      <el-form-item label=\"节点名称\" prop=\"label\">\r\n        <el-input v-model=\"nodeForm.label\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"doClose\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"doSubmit(formRef)\"\r\n          >确定</el-button\r\n        >\r\n      </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n<script lang=\"ts\" setup>\r\n  import { ref, unref, reactive, watch } from 'vue'\r\n  import type { FormInstance, FormRules } from 'element-plus'\r\n  const formRef = ref<FormInstance>()\r\n  const dialogVisible = ref<boolean>(false)\r\n  const nodeForm = reactive({\r\n    label:''\r\n  })\r\n  const rules = reactive<FormRules>({\r\n    label: [\r\n      { required: true, message: '请输入节点名称', trigger: 'blur' },\r\n    ],\r\n  })\r\n  const props = defineProps({\r\n    visible: Boolean\r\n  })\r\n  console.log(props)\r\n  watch(() => props.visible, (val)=> {\r\n    console.log(props.visible, 46)\r\n    dialogVisible.value = val\r\n  })\r\n\r\n  const emit = defineEmits(['submit', 'close', 'update:visible'])\r\n  const doSubmit = async (formEl:FormInstance | undefined) => {\r\n    if (!formEl) return\r\n    await formEl.validate((valid, fields) => {\r\n      if (valid) {\r\n        emit('submit', nodeForm)\r\n        doClose()\r\n      } else {\r\n        console.log('error submit!', fields)\r\n      }\r\n    })\r\n  }\r\n  const resetForm = (formEl: FormInstance | undefined) => {\r\n    if (!formEl) return\r\n    formEl.resetFields(['label'])\r\n  }\r\n  const doClose = () => {\r\n    resetForm(unref(formRef))\r\n    emit('close')\r\n    emit('update:visible', false)\r\n    dialogVisible.value = false\r\n  }\r\n</script>","<template>\r\n  <el-container class=\"page-container\">\r\n    <el-header>\r\n      <el-button type=\"primary\" @click=\"reload\">重置</el-button>\r\n    </el-header>\r\n    <div style=\"height: 400px;\">\r\n      <Vue3TreeOrg\r\n        collapsable\r\n        :data=\"treeData\"\r\n        :node-add=\"nodeAdd\"\r\n        :clone-node-drag=\"false\"\r\n        @on-node-blur=\"nodeBlur\"\r\n        @on-node-click=\"nodeClick\"\r\n      />\r\n    </div>\r\n    <addTreeNode v-model:visible=\"addVisible\" @submit=\"doSubmit\" />\r\n  </el-container>\r\n</template>\r\n<script lang=\"ts\" setup name=\"baseTree\">\r\n  import { ref, onMounted } from 'vue';\r\n  import { getTreeData } from '@/api/tree'\r\n  import { randomString } from '@/utils'\r\n  import addTreeNode from './components/addTreeNode.vue';\r\n  import { Vue3TreeOrg } from 'vue3-tree-org'\r\n  import \"vue3-tree-org/lib/vue3-tree-org.css\"\r\n  const treeData = ref({})\r\n  const getTree = async () => {\r\n    treeData.value = await getTreeData({})\r\n  }\r\n  const reload = () => {\r\n    getTree()\r\n  }\r\n  onMounted(() => {\r\n    getTree()\r\n  })\r\n  const addVisible = ref(false)\r\n  let parentNode:Record<string, any>\r\n  const nodeAdd = (node:Record<string, any>) => {\r\n    addVisible.value = true\r\n    parentNode = node\r\n  }\r\n  const doSubmit = (data: Record<string, string>) => {\r\n    if (parentNode) {\r\n      console.log(data)\r\n      const node = { ...data, \"id\": randomString(8), \"pid\": parentNode.id}\r\n      if (parentNode.children) {\r\n        parentNode.children.push(node)\r\n      } else {\r\n        parentNode.children = [node]\r\n      }\r\n    }\r\n  }\r\n  const nodeClick = (e:FocusEvent, data:any) => {\r\n    console.log(data)\r\n  }\r\n  const nodeBlur = (e:FocusEvent, data:any) => {\r\n    console.log(data)\r\n    data.id = '1529986245'\r\n  }\r\n</script>"],"names":["getTreeData","data","request","formRef","ref","dialogVisible","nodeForm","reactive","rules","props","watch","val","doSubmit","formEl","valid","fields","emit","doClose","resetForm","unref","treeData","getTree","reload","onMounted","addVisible","parentNode","nodeAdd","node","randomString","nodeClick","e","nodeBlur"],"mappings":"iYAEa,MAAAA,EAAeC,GACjBC,EAAQ,CACX,IAAK,qCACL,OAAQ,MACR,KAAAD,CAAA,CACH,4LCuBGE,EAAUC,IACVC,EAAgBD,EAAa,EAAK,EAClCE,EAAWC,EAAS,CACxB,MAAM,EAAA,CACP,EACKC,EAAQD,EAAoB,CAChC,MAAO,CACL,CAAE,SAAU,GAAM,QAAS,6CAAW,QAAS,MAAO,CACxD,CAAA,CACD,EAID,QAAQ,IAAIE,CAAK,EACjBC,EAAM,IAAMD,EAAM,QAAUE,GAAO,CACzB,QAAA,IAAIF,EAAM,QAAS,EAAE,EAC7BJ,EAAc,MAAQM,CAAA,CACvB,EAGK,MAAAC,EAAW,MAAOC,GAAoC,CACtD,CAACA,GACL,MAAMA,EAAO,SAAS,CAACC,EAAOC,IAAW,CACnCD,GACFE,EAAK,SAAUV,CAAQ,EACfW,KAEA,QAAA,IAAI,gBAAiBF,CAAM,CACrC,CACD,CAAA,EAEGG,EAAaL,GAAqC,CAClD,CAACA,GACEA,EAAA,YAAY,CAAC,OAAO,CAAC,CAAA,EAExBI,EAAU,IAAM,CACVC,EAAAC,EAAMhB,CAAO,CAAC,EACxBa,EAAK,OAAO,EACZA,EAAK,iBAAkB,EAAK,EAC5BX,EAAc,MAAQ,EAAA,+yBC5ClB,MAAAe,EAAWhB,EAAI,CAAA,CAAE,EACjBiB,EAAU,SAAY,CAC1BD,EAAS,MAAQ,MAAMpB,EAAY,CAAE,CAAA,CAAA,EAEjCsB,EAAS,IAAM,CACXD,GAAA,EAEVE,EAAU,IAAM,CACNF,GAAA,CACT,EACK,MAAAG,EAAapB,EAAI,EAAK,EACxB,IAAAqB,EACE,MAAAC,EAAWC,GAA6B,CAC5CH,EAAW,MAAQ,GACNC,EAAAE,CAAA,EAETf,EAAYX,GAAiC,CACjD,GAAIwB,EAAY,CACd,QAAQ,IAAIxB,CAAI,EACV,MAAA0B,EAAO,CAAE,GAAG1B,EAAM,GAAM2B,EAAa,CAAC,EAAG,IAAOH,EAAW,IAC7DA,EAAW,SACFA,EAAA,SAAS,KAAKE,CAAI,EAElBF,EAAA,SAAW,CAACE,CAAI,CAE/B,CAAA,EAEIE,EAAY,CAACC,EAAc7B,IAAa,CAC5C,QAAQ,IAAIA,CAAI,CAAA,EAEZ8B,EAAW,CAACD,EAAc7B,IAAa,CAC3C,QAAQ,IAAIA,CAAI,EAChBA,EAAK,GAAK,YAAA"}